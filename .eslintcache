[{"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/index.js":"1","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/reportWebVitals.js":"2","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/App.js":"3","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/Header.js":"4","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/CategoryContainer.js":"5","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/Homepage.js":"6","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/TaskContainer.js":"7","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/KindnessForm.js":"8","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/Search.js":"9","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/CategoryCard.js":"10","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/TaskCard.js":"11","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/Icon.js":"12","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/End.js":"13"},{"size":501,"mtime":1609647780781,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1607704095251,"results":"16","hashOfConfig":"15"},{"size":7045,"mtime":1609917958423,"results":"17","hashOfConfig":"15"},{"size":825,"mtime":1609914210898,"results":"18","hashOfConfig":"15"},{"size":766,"mtime":1609914260221,"results":"19","hashOfConfig":"15"},{"size":1517,"mtime":1609910551997,"results":"20","hashOfConfig":"15"},{"size":711,"mtime":1609835313208,"results":"21","hashOfConfig":"15"},{"size":1421,"mtime":1609916652272,"results":"22","hashOfConfig":"15"},{"size":552,"mtime":1609916800081,"results":"23","hashOfConfig":"15"},{"size":3518,"mtime":1609867707434,"results":"24","hashOfConfig":"15"},{"size":2670,"mtime":1609835212139,"results":"25","hashOfConfig":"15"},{"size":273,"mtime":1609914322689,"results":"26","hashOfConfig":"15"},{"size":272,"mtime":1609917862484,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"rpja4x",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/index.js",[],["57","58"],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/reportWebVitals.js",[],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/App.js",["59"],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/Header.js",[],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/CategoryContainer.js",[],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/Homepage.js",[],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/TaskContainer.js",[],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/KindnessForm.js",[],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/Search.js",[],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/CategoryCard.js",["60"],"import React from \"react\";\nimport { Button, Card, Icon, Modal, Header } from \"semantic-ui-react\";\nimport \"../Styles/CategoryCard.css\";\nimport dayjs from \"dayjs\";\nconst today = dayjs().format(\"YYYY-MM-DD\");\n\nclass CategoryCard extends React.Component {\n  state = {\n    clicked: false,\n    open: false,\n    date: \"\",\n  };\n\n  toggleHandler = () => {\n    this.setState({\n      clicked: !this.state.clicked,\n    });\n  };\n\n  toggleModal = () => {\n    this.setState({\n      open: !this.state.open,\n    });\n  };\n\n  thisWeek = () => {\n    let rand = Math.random() * (7 - 1) + 1;\n    let date = dayjs().add(rand, \"day\").format(\"YYYY-MM-DD\");\n    this.setState({ date: date });\n  };\n\n  nextWeek = () => {\n    let rand = Math.random() * (14 - 7) + 7;\n    let date = dayjs().add(rand, \"day\").format(\"YYYY-MM-DD\");\n    this.setState({ date: date });\n  };\n\n  thisMonth = () => {\n    let rand = Math.random() * (31 - 1) + 1;\n    let date = dayjs().add(rand, \"day\").format(\"YYYY-MM-DD\");\n    this.setState({ date: date });\n  };\n\n  render() {\n    return (\n      <Card className=\"card\">\n        <Card.Content>\n          <Card.Header>{this.props.kindnessObj.act}</Card.Header>\n          <Card.Description>\n            Category: {this.props.kindnessObj.category}\n          </Card.Description>\n          <Icon\n            className=\"close\"\n            name=\"close\"\n            color=\"black\"\n            onClick={() => this.props.removeHandler(this.props.kindnessObj.id)}\n          />\n          {this.state.clicked ? (\n            <Button\n              floated=\"right\"\n              positive\n              disabled\n              size=\"tiny\"\n              onClick={this.toggleHandler}\n            >\n              Scheduled!\n            </Button>\n          ) : (\n            <Modal\n              onClose={() => this.toggleModal()}\n              onOpen={() => this.toggleModal()}\n              open={this.state.open}\n              trigger={\n                <Button\n                  floated=\"right\"\n                  positive\n                  size=\"tiny\"\n                  onClick={() => {\n                    this.toggleModal();\n                  }}\n                >\n                  Remind me!\n                </Button>\n              }\n            >\n              <Modal.Header>YUH! Let's do this!</Modal.Header>\n              <Modal.Content>\n                <Modal.Description>\n                  <Header>Pick a time block</Header>\n                  {/* <Button basic grey>  */}\n                    <Button basic grey onClick={() => this.thisWeek()}>This Week?</Button>\n                    <Button basic grey onClick={() => this.nextWeek()}>Next Week?</Button>\n                    <Button basic grey onClick={() => this.thisMonth()}>This Month?</Button>\n                  {/* </Button> */}\n                </Modal.Description>\n              </Modal.Content>\n              <Modal.Actions>\n                <Button color=\"basic grey\" onClick={() => this.toggleModal()}>Cancel</Button>\n                <Button\n                  content=\"Confirm\"\n                  labelPosition=\"right\"\n                  icon=\"checkmark\"\n                  onClick={() => {\n                    this.toggleModal();\n                    this.toggleHandler();\n                    this.props.createUserKindness(this.props.kindnessObj, this.state.date);\n                  }}\n                  positive\n                />\n              </Modal.Actions>\n            </Modal>\n          )}\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nexport default CategoryCard;\n","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/TaskCard.js",["61","62"],"import React from 'react'\nimport { Button, Card, Icon, Modal, Header } from \"semantic-ui-react\";\nimport \"../Styles/TaskCard.css\";\n\nclass TaskCard extends React.Component {\n\n    toggleHandler = () => {\n        this.props.completeHandler(this.props.taskObj)\n    }\n\n\n// is this task completed? Yes - RAKed, No - show button\n// is button clicked? Yes - mark as read and change state, No - leave it (need - this.state.clicked? and also onClick={this.toggleHandler}\n\n//if(this.props.taskObj.completion === true){<p>{\"~RAKed IT!~\"}</p> : <button >{\"Say No More!\"}</button>} else\n\n    render() {\n        return (\n            <Card className=\"card\">\n                <Card.Content>\n                <Card.Header>{this.props.taskObj.date}</Card.Header>\n                <Card.Description>\n                Category: {this.props.taskObj.kindness.category}\n                Note: {this.props.taskObj.note}\n                Action: {this.props.taskObj.kindness.act}\n                </Card.Description>\n                \n                <Icon\n                className=\"close\"\n                name=\"close\"\n                color=\"black\"\n                onClick={() => this.props.removeTaskHandler(this.props.taskObj.id)}\n                />       \n                {this.props.taskObj.completion ? (\n                    <Button\n                    floated=\"right\"\n                    positive\n                    disabled\n                    size=\"tiny\"\n                    onClick={this.toggleHandler}\n                    >\n                    Completed!\n                    </Button>\n                ) : (\n                    <Button\n                    floated=\"right\"\n                    positive\n                    size=\"tiny\"\n                    onClick={this.toggleHandler}\n                    >\n                    Pending\n                    </Button>\n                )}\n                </Card.Content>\n                </Card>  \n        )\n    }\n            // <div className=\"card\">\n            //     <h3>Date: {this.props.taskObj.date}</h3>\n            //     <p>Category: {this.props.taskObj.kindness.category}</p>\n            //     <p>{this.props.taskObj.note}</p>\n            //     <p>Action: {this.props.taskObj.kindness.act} </p>\n            //     {this.props.taskObj.completion ? <button class=\"ui tiny button\" onClick={this.toggleHandler}>Completed!</button> : <button class=\"ui tiny button\" onClick={this.toggleHandler} >Pending</button>}\n            //     {/* {this.props.taskObj.completion ? <p>{\"~RAKed IT!~\"}</p> : <button onClick={()=>this.props.completeHandler(this.props.taskObj.id)} >\"Say No More!\"</button>} */}\n            // </div>\n} \nexport default TaskCard;","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/Icon.js",[],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/End.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":26},{"ruleId":"67","severity":1,"message":"71","line":5,"column":7,"nodeType":"69","messageId":"70","endLine":5,"endColumn":12},{"ruleId":"67","severity":1,"message":"72","line":2,"column":30,"nodeType":"69","messageId":"70","endLine":2,"endColumn":35},{"ruleId":"67","severity":1,"message":"73","line":2,"column":37,"nodeType":"69","messageId":"70","endLine":2,"endColumn":43},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'today' is assigned a value but never used.","'Modal' is defined but never used.","'Header' is defined but never used.","no-global-assign","no-unsafe-negation"]