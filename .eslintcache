[{"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/index.js":"1","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/reportWebVitals.js":"2","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/App.js":"3","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/Header.js":"4","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/CategoryContainer.js":"5","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/Homepage.js":"6","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/TaskContainer.js":"7","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/KindnessForm.js":"8","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/Search.js":"9","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/CategoryCard.js":"10","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/TaskCard.js":"11"},{"size":501,"mtime":1609647780781,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607704095251,"results":"14","hashOfConfig":"13"},{"size":6873,"mtime":1609834049299,"results":"15","hashOfConfig":"13"},{"size":825,"mtime":1609908276495,"results":"16","hashOfConfig":"13"},{"size":754,"mtime":1609828121988,"results":"17","hashOfConfig":"13"},{"size":1517,"mtime":1609910551997,"results":"18","hashOfConfig":"13"},{"size":711,"mtime":1609835313208,"results":"19","hashOfConfig":"13"},{"size":1348,"mtime":1609807395621,"results":"20","hashOfConfig":"13"},{"size":489,"mtime":1609827471693,"results":"21","hashOfConfig":"13"},{"size":3518,"mtime":1609867707434,"results":"22","hashOfConfig":"13"},{"size":2670,"mtime":1609835212139,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"rpja4x",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/index.js",[],["49","50"],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/reportWebVitals.js",[],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/App.js",["51"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Homepage from \"./components/Homepage\";\nimport CategoryContainer from \"./components/CategoryContainer\";\nimport TaskContainer from \"./components/TaskContainer\";\nimport KindnessForm from \"./components/KindnessForm\";\nimport Search from \"./components/Search\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nclass App extends React.Component {\n  state = {\n    kindnessArray: [],\n    usersArray: [],\n    userKindnessArray: [],\n    searchTerm: \"\",\n  };\n\n  componentDidMount() {\n    Promise.all([\n      fetch(\"http://localhost:3000/api/v1/kindnesses\"),\n      fetch(\"http://localhost:3000/api/v1/users\"),\n      fetch(\"http://localhost:3000/api/v1/user_kindnesses\"),\n    ])\n\n      .then(([res1, res2, res3]) => {\n        return Promise.all([res1.json(), res2.json(), res3.json()]);\n      })\n      .then(([data1, data2, data3]) => {\n        this.setState({\n          kindnessArray: data1,\n          usersArray: data2,\n          userKindnessArray: data3,\n        });\n      });\n  }\n\n  addKindness = (kindnessObj) => {\n    // debugger\n    fetch(\"http://localhost:3000/api/v1/kindnesses\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(kindnessObj),\n    })\n      .then((resp) => resp.json())\n      .then((data) =>\n        this.setState({ kindnessArray: [...this.state.kindnessArray, data] })\n      );\n  };\n\n  removeHandler = (id) => {\n    fetch(`http://localhost:3000/api/v1/kindnesses/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((resp) => resp.json())\n      .then(() => {\n        let foundObj = this.state.kindnessArray.find(\n          (kindnessObj) => kindnessObj.id === id\n        );\n        let copyOfKindness = [...this.state.kindnessArray];\n        let index = copyOfKindness.indexOf(foundObj);\n        copyOfKindness.splice(index, 1);\n        this.setState({ kindnessArray: copyOfKindness });\n      });\n  };\n\n\n  removeTaskHandler = (id) => {\n    fetch(`http://localhost:3000/api/v1/user_kindnesses/${id}`, {\n      method: \"DELETE\",\n    })\n    .then((resp) => resp.json())\n    .then(() => {\n      let foundObj = this.state.userKindnessArray.find(\n        (taskObj) => taskObj.id === id\n      );\n      let copyOfTask = [...this.state.userKindnessArray];\n        let index = copyOfTask.indexOf(foundObj);\n        copyOfTask.splice(index, 1);\n        this.setState({ userKindnessArray: copyOfTask });\n      });\n  };\n\n  completeHandler = (obj) => {\n    fetch(`http://localhost:3000/api/v1/user_kindnesses/${obj.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        completion: !obj.completion,\n      }),\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        let arrayCopy = [...this.state.userKindnessArray];\n        let foundObj = arrayCopy.find((taskObj) => taskObj.id === obj.id);\n        foundObj.completion = !foundObj.completion;\n        this.setState({ userKindnessArray: arrayCopy });\n      });\n  };\n\n  createUserKindness = (kindnessObj, date) => {\n    fetch(\"http://localhost:3000/api/v1/user_kindnesses\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user_id: 1,\n        kindness_id: kindnessObj.id,\n        completion: false,\n        note: \"\",\n        date: date,\n      }),\n    })\n      .then((r) => r.json())\n      .then((data => {\n        let copy = [...this.state.userKindnessArray]\n        copy.push(data)\n        this.setState({userKindnessArray: copy})\n        console.log(\"test\", data)\n      }));\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  filterKindness = () => {\n    return this.state.kindnessArray.filter(\n      (kindnessObj) =>\n        kindnessObj.act\n          .toLowerCase()\n          .includes(this.state.searchTerm.toLowerCase()) ||\n        kindnessObj.category\n          .toLowerCase()\n          .includes(this.state.searchTerm.toLowerCase())\n    );\n  };\n\n  filterUserKindnesses = () => {\n    return this.state.userKindnessArray.filter(\n      (taskObj) =>\n        taskObj.date\n          .toLowerCase()\n          .includes(this.state.searchTerm.toLowerCase()) ||\n        taskObj.kindness.act\n          .toLowerCase()\n          .includes(this.state.searchTerm.toLowerCase())\n    );\n  };\n\n  // completeHandler = (id) => {\n  //   fetch(`http://localhost:3000/api/v1/user_kindnesses/${id}`, {\n  //     method: \"PATCH\",\n  //     headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         \"Accept\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({\n  //       completion: true\n  //     })\n  // })\n  // .then(resp => resp.json())\n  // .then((data) => {\n  //   // console.log(data)\n  //   let arrayCopy = [...this.state.userKindnessArray]\n  //   let foundObj = (arrayCopy.find(taskObj => taskObj.id === id))\n  //   foundObj.completion = true\n  //   this.setState({userKindnessArray: arrayCopy})\n  // })}\n\n  render() {\n    // console.log(this.state.kindnessArray)\n    return (\n      <Router>\n        <Route path=\"/:page\" component={Header} />\n        <Switch>\n          <Route exact path=\"/home\" component={Homepage} />\n          <Route\n            path=\"/categories\"\n            render={() => (\n              <>\n                <KindnessForm addKindness={this.addKindness} />\n                {/* <CategoryContainer kindnessArray={this.state.kindnessArray} removeHandler={this.removeHandler}/> */}\n                <Search\n                  searchTerm={this.state.searchTerm}\n                  handleChange={this.handleChange}\n                />\n                <CategoryContainer\n                  kindnessArray={this.filterKindness()}\n                  removeHandler={this.removeHandler}\n                  createUserKindness={this.createUserKindness}\n                />\n              </>\n            )}\n          />\n          <Route\n            path=\"/history\"\n            render={() => (\n              <>\n                <Search\n                  searchTerm={this.state.searchTerm}\n                  handleChange={this.handleChange}\n                />\n                <TaskContainer\n                  userKindnessArray={this.filterUserKindnesses()}\n                  // userKindnessArray={this.state.userKindnessArray}\n                  completeHandler={this.completeHandler}\n                  removeTaskHandler={this.removeTaskHandler}\n                />\n              </>\n            )}\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n// add category to history/task\n// allow search for ^\n","/Users/chloechang/Development/code/Mod5/raks/rak-front/src/Header.js",[],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/CategoryContainer.js",[],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/Homepage.js",[],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/TaskContainer.js",[],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/KindnessForm.js",[],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/Search.js",[],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/CategoryCard.js",["52"],"/Users/chloechang/Development/code/Mod5/raks/rak-front/src/components/TaskCard.js",["53","54"],"import React from 'react'\nimport { Button, Card, Icon, Modal, Header } from \"semantic-ui-react\";\nimport \"../Styles/TaskCard.css\";\n\nclass TaskCard extends React.Component {\n\n    toggleHandler = () => {\n        this.props.completeHandler(this.props.taskObj)\n    }\n\n\n// is this task completed? Yes - RAKed, No - show button\n// is button clicked? Yes - mark as read and change state, No - leave it (need - this.state.clicked? and also onClick={this.toggleHandler}\n\n//if(this.props.taskObj.completion === true){<p>{\"~RAKed IT!~\"}</p> : <button >{\"Say No More!\"}</button>} else\n\n    render() {\n        return (\n            <Card className=\"card\">\n                <Card.Content>\n                <Card.Header>{this.props.taskObj.date}</Card.Header>\n                <Card.Description>\n                Category: {this.props.taskObj.kindness.category}\n                Note: {this.props.taskObj.note}\n                Action: {this.props.taskObj.kindness.act}\n                </Card.Description>\n                \n                <Icon\n                className=\"close\"\n                name=\"close\"\n                color=\"black\"\n                onClick={() => this.props.removeTaskHandler(this.props.taskObj.id)}\n                />       \n                {this.props.taskObj.completion ? (\n                    <Button\n                    floated=\"right\"\n                    positive\n                    disabled\n                    size=\"tiny\"\n                    onClick={this.toggleHandler}\n                    >\n                    Completed!\n                    </Button>\n                ) : (\n                    <Button\n                    floated=\"right\"\n                    positive\n                    size=\"tiny\"\n                    onClick={this.toggleHandler}\n                    >\n                    Pending\n                    </Button>\n                )}\n                </Card.Content>\n                </Card>  \n        )\n    }\n            // <div className=\"card\">\n            //     <h3>Date: {this.props.taskObj.date}</h3>\n            //     <p>Category: {this.props.taskObj.kindness.category}</p>\n            //     <p>{this.props.taskObj.note}</p>\n            //     <p>Action: {this.props.taskObj.kindness.act} </p>\n            //     {this.props.taskObj.completion ? <button class=\"ui tiny button\" onClick={this.toggleHandler}>Completed!</button> : <button class=\"ui tiny button\" onClick={this.toggleHandler} >Pending</button>}\n            //     {/* {this.props.taskObj.completion ? <p>{\"~RAKed IT!~\"}</p> : <button onClick={()=>this.props.completeHandler(this.props.taskObj.id)} >\"Say No More!\"</button>} */}\n            // </div>\n} \nexport default TaskCard;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"63","line":5,"column":7,"nodeType":"61","messageId":"62","endLine":5,"endColumn":12},{"ruleId":"59","severity":1,"message":"64","line":2,"column":30,"nodeType":"61","messageId":"62","endLine":2,"endColumn":35},{"ruleId":"59","severity":1,"message":"65","line":2,"column":37,"nodeType":"61","messageId":"62","endLine":2,"endColumn":43},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'today' is assigned a value but never used.","'Modal' is defined but never used.","'Header' is defined but never used.","no-global-assign","no-unsafe-negation"]